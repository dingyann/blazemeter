{
  "open": {
    "target": {
      "type": "string",
      "description": "A URL"
    },
    "value": null
  },
  "openWindow": {
    "target": {
      "type": "string",
      "description": "A URL"
    },
    "value": null
  },
  "selectWindow": {
    "target": {
      "type": "string",
      "description": "Auto-generated"
    },
    "value": null
  },
  "selectFrame": {
    "target": {
      "type": "string",
      "description": "\"index=0\" (Select the first frame of index 0)\n \"relative=parent\" (Select the parent frame)\n\"relative=top\" (Select the top frame)"
    },
    "value": null
  },
  "close": {
    "target": {
      "type": "string",
      "description": "Auto-generated"
    },
    "value": null
  },
  "clickAt": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": "x,y position of the mouse event relative to the target element.\nFor example:\"10,10\". The value can left blank to denote a simple click."
    }
  },
  "doubleClickAt": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": "x,y position of the mouse event relative to the target element.\n For example: \"10,10\". The value can left blank to denote a simple double click."
    }
  },
  "mouseDownAt": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": "x,y position of the mouse event relative to the target element.\n For example: \"10,10\""
    }
  },
  "mouseMoveAt": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": ""
    }
  },
  "mouseOut": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": null
  },
  "mouseOver": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": null
  },
  "mouseUpAt": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": "x,y position of the mouse event relative to the target element.\n For example: \"10,10\""
    }
  },
  "dragAndDropToObject": {
    "target": {
      "type": "locator",
      "description": "The locator of the element to be dragged"
    },
    "value": {
      "type": "string",
      "description": "The locator of the element on which the target element is dropped"
    }
  },
  "sendKeys": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": ""
    }
  },
  "submit": {
    "target": {
      "type": "locator",
      "description": "A locator for the form to be submitted"
    },
    "value": null
  },
  "type": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": ""
    }
  },
  "editContent": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": ""
    }
  },
  "addSelection": {
    "target": {
      "type": "locator",
      "description": "A locator of a multi-select box"
    },
    "value": {
      "type": "string",
      "description": ""
    }
  },
  "removeSelection": {
    "target": {
      "type": "locator",
      "description": "A locator of a multi-select box"
    },
    "value": {
      "type": "string",
      "description": ""
    }
  },
  "select": {
    "target": {
      "type": "locator",
      "description": "A locator of a drop-down menu"
    },
    "value": {
      "type": "string",
      "description": ""
    }
  },
  "assertAlert": {
    "target": {
      "type": "string",
      "description": "The expected alert message"
    },
    "value": null
  },
  "assertConfirmation": {
    "target": {
      "type": "string",
      "description": "The expected confirmation message"
    },
    "value": null
  },
  "chooseOkOnNextConfirmation": {
    "target": null,
    "value": null
  },
  "chooseCancelOnNextConfirmation": {
    "target": null,
    "value": null
  },
  "assertPrompt": {
    "target": {
      "type": "string",
      "description": "The expected prompt message"
    },
    "value": null
  },
  "answerOnNextPrompt": {
    "target": {
      "type": "string",
      "description": "The string to be set to the next prompt pop-up"
    },
    "value": null
  },
  "chooseCancelOnNextPrompt": {
    "target": null,
    "value": null
  },
  "echo": {
    "target": {
      "type": "string",
      "description": "The string to be printed in the log console. Variable declared in the storeXXX commands can be used in the string.\n For example: \"Hello ${var_usr}\""
    },
    "value": null
  },
  "pause": {
    "target": null,
    "value": {
      "type": "string",
      "description": ""
    }
  },
  "runScript": {
    "target": {
      "type": "string",
      "description": "The Javascript code to be run.\n For example: \"var a=10; var b=10; console.log(a+b);\" \nNOTE THAT: Avoid using alert(), prompt(), and confirm(). These three functions will not take effect while running. Please use console.log() to log messages instead."
    },
    "value": null
  },
  "store": {
    "value": {
      "type": "string",
      "description": "A string to store"
    },
    "target": {
      "type": "string",
      "description": "The name of the variable storing the string.\n For example: \"var_usr\". To use the variable in another command\"s Target or Value, surround with ${ }, e.g., ${var_usr}."
    }
  },
  "storeText": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": "The name of the variable storing the text of the target element.\n For example: \"var_ele_txt\". To use the variable in another command\"s Target or Value, surround with ${ }, e.g., ${var_ele_txt}."
    }
  },
  "storeTitle": {
    "target": {
      "type": "string",
      "description": "The title to store (auto-generated)"
    },
    "value": {
      "type": "string",
      "description": "The name of the variable storing the title.\n For example: \"var_title\". To use the variable in another command\"s Target or Value, surround with ${ }, e.g., ${var_title}."
    }
  },
  "storeValue": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": "The name of the variable storing the value of the target element.\n For example: \"var_ele_value\". To use the variable in another command\"s Target or Value, surround with ${ }, e.g., ${var_ele_value}."
    }
  },
  "storeEval": {
    "target": {
      "type": "string",
      "description": "The Javascript code to be run.\n For example: \"var a=10; var b=10; console.log(a+b);\" \nNOTE THAT: Avoid using alert(), prompt(), and confirm(). These three functions will not take effect while running. Please use console.log() to log messages instead."
    },
    "value": {
      "type": "string",
      "description": "The name of the variable storing the value of the target element.\n For example: \"var_ele_value\". To use the variable in another command\"s Target or Value, surround with ${ }, e.g., ${var_ele_value}."
    }
  },
  "verifyText": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": "The expected text of the target element (Exact matching). The next command will still be run even if the text verification fails. Variable declared in the storeXXX commands can be used in the string.\n For example: \"Hello ${var_usr}\""
    }
  },
  "verifyTitle": {
    "target": {
      "type": "string",
      "description": ""
    },
    "value": null
  },
  "assertText": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": "The expected text of the target element (Exact matching).Variable declared in the storeXXX commands can be used in the string.\n For example: \"Hello ${var_usr}\""
    }
  },
  "assertTitle": {
    "target": {
      "type": "string",
      "description": "The expected string of the title (Exact matching). Variable declared in the storeXXX commands can be used in the string.\n For example: \"Hello ${var_usr}\""
    },
    "value": null
  },
  "assertValue": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": "The expected value of the target element (Exact matching). Variable declared in the storeXXX commands can be used in the value.\n For example: \"Hello ${var_usr}\""
    }
  },
  "assertEval": {
    "target": {
      "type": "string",
      "description": "The Javascript code to be run.\n For example: \"var a=10; var b=10; console.log(a+b);\" \nNOTE THAT: Avoid using alert(), prompt(), and confirm(). These three functions will not take effect while running. Please use console.log() to log messages instead."
    },
    "value": null
  },
  "resizeWindow": {
    "target": {
      "type": "string",
      "description": "Window Size"
    },
    "value": {
      "type": "string",
      "description": "X and Y in pixels"
    }
  },
  "maximizeWindow": {
    "target": {
      "type": "string",
      "description": "Maximize window Size"
    },
    "value": null
  },
  "waitFor": {
    "target": {
      "type": "locator",
      "description": "A locator"
    },
    "value": {
      "type": "string",
      "description": "type"
    }
  },
  "assertDialog": {
    "value": {
      "type": "string",
      "description": "The expected message"
    },
    "target": {
      "type": "string",
      "description": "Dialog type"
    }
  },
  "answerDialog": {
    "value": {
      "type": "string",
      "description": "Answer for the dialog. You can use special values #OK and #Cancel here"
    },
    "target": {
      "type": "string",
      "description": "Dialog type"
    }
  }
}
